{
  "version": 3,
  "sources": ["../../icomoon-react/src/IcomoonReact/IcomoonReact.tsx", "../../icomoon-react/src/index.ts"],
  "sourcesContent": ["import React from \"react\";\n\nexport const iconList = iconSet => {\n  const list: Array<string> = [];\n  iconSet.icons.forEach(icon => {\n    list.push(icon.properties.name.split(\", \")[0]);\n  });\n  return list;\n};\n\nfunction getSvg(icon, iconSet, styles, size, className, rest) {\n  const find = iconEl => iconEl.properties.name.split(\", \").includes(icon);\n  const currentIcon = iconSet.icons.find(find);\n  const renderPath = iconObj => (path, index) => {\n    const attrs = (iconObj.attrs && iconObj.attrs[index]) || {};\n    return <path style={styles.path} key={index} d={path} {...attrs} />;\n  };\n\n  if (currentIcon) {\n    return (\n      <svg\n        className={className}\n        style={styles.svg}\n        width={size}\n        height={size}\n        viewBox={`0 0 ${currentIcon.icon.width || \"1024\"} 1024`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...rest}\n      >\n        {currentIcon.icon.paths.map(renderPath(currentIcon.icon))}\n      </svg>\n    );\n  }\n  console.warn(`icon ${icon} does not exist.`);\n  return null;\n}\n\nexport const IcomoonReact: React.FC<{\n  color?: string;\n  size?: string | number;\n  icon: string;\n  iconSet: Object;\n  className?: string;\n  style?: React.CSSProperties;\n  [x: string]: any;\n}> = props => {\n  const {\n    color,\n    size = \"100%\",\n    icon,\n    iconSet,\n    className = \"\",\n    style = {},\n    ...rest\n  } = props;\n\n  const styles = {\n    svg: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      ...style\n    },\n    path: {\n      fill: color\n    }\n  };\n\n  return getSvg(icon, iconSet, styles, size, className, rest);\n};\n\nIcomoonReact.displayName = `IcomoonReact`;\n\nexport default IcomoonReact;\n", "import { IcomoonReact } from \"./IcomoonReact/IcomoonReact\";\n\nexport { iconList } from \"./IcomoonReact/IcomoonReact\";\nexport default IcomoonReact;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,UAAA,gBAAA,eAAA;AAEa,YAAA,WAAW,SAAA,SAAO;AAC7B,UAAM,OAAsB,CAAA;AAC5B,cAAQ,MAAM,QAAQ,SAAA,MAAI;AACxB,aAAK,KAAK,KAAK,WAAW,KAAK,MAAM,IAAI,EAAE,CAAC,CAAC;MAC/C,CAAC;AACD,aAAO;IACT;AAEA,aAAS,OAAO,MAAM,SAAS,QAAQ,MAAM,WAAW,MAAI;AAC1D,UAAM,OAAO,SAAA,QAAM;AAAI,eAAA,OAAO,WAAW,KAAK,MAAM,IAAI,EAAE,SAAS,IAAI;MAAhD;AACvB,UAAM,cAAc,QAAQ,MAAM,KAAK,IAAI;AAC3C,UAAM,aAAa,SAAA,SAAO;AAAI,eAAA,SAAC,MAAM,OAAK;AACxC,cAAM,QAAS,QAAQ,SAAS,QAAQ,MAAM,KAAK,KAAM,CAAA;AACzD,iBAAO,QAAA,QAAA,cAAA,QAAA,SAAA,EAAM,OAAO,OAAO,MAAM,KAAK,OAAO,GAAG,KAAI,GAAM,KAAK,CAAA;QACjE;MAH8B;AAK9B,UAAI,aAAa;AACf,eACE,QAAA,QAAA,cAAA,OAAA,SAAA,EACE,WACA,OAAO,OAAO,KACd,OAAO,MACP,QAAQ,MACR,SAAS,UAAO,YAAY,KAAK,SAAS,UAAM,SAChD,OAAM,6BAA4B,GAC9B,IAAI,GAEP,YAAY,KAAK,MAAM,IAAI,WAAW,YAAY,IAAI,CAAC,CAAC;;AAI/D,cAAQ,KAAK,UAAQ,OAAI,kBAAkB;AAC3C,aAAO;IACT;AAEa,YAAA,eAQR,SAAA,OAAK;AAEN,UAAA,QAOE,MAAK,OANP,KAME,MAAK,MANP,OAAI,OAAA,SAAG,SAAM,IACb,OAKE,MAAK,MAJP,UAIE,MAAK,SAHP,KAGE,MAAK,WAHP,YAAS,OAAA,SAAG,KAAE,IACd,KAEE,MAAK,OAFP,QAAK,OAAA,SAAG,CAAA,IAAE,IACP,OAAI,OACL,OARE,CAAA,SAAA,QAAA,QAAA,WAAA,aAAA,OAAA,CAQL;AAED,UAAM,SAAS;QACb,KAAG,SAAA,EACD,SAAS,gBACT,eAAe,SAAQ,GACpB,KAAK;QAEV,MAAM;UACJ,MAAM;;;AAIV,aAAO,OAAO,MAAM,SAAS,QAAQ,MAAM,WAAW,IAAI;IAC5D;AAEA,YAAA,aAAa,cAAc;AAE3B,YAAA,UAAe,QAAA;;;;;;;;ACxEf,QAAA,iBAAA;AAEA,QAAA,iBAAA;AAAS,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,eAAA;IAAQ,EAAA,CAAA;AACjB,YAAA,UAAe,eAAA;;;",
  "names": []
}
